#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <vector>
using namespace std;

const bool CLEAR_SCREEN = true;

void clearScreen() {
    cout << endl;

    if (CLEAR_SCREEN) {
        cout << "\033c";
    }

    cout << endl;

    return;
}


void drawBoard(const vector < char >&gameBoard) {
    clearScreen();
    for (int i = 0; i < 9; i += 3) {
        cout << "  " << gameBoard.at(i) << "  |  " << gameBoard.at(i + 1) << "  |  "
            << gameBoard.at(i + 2) << "  " << endl;
        if (i < 6) {
            cout << "-----|-----|-----" << endl;
        }
    }
    cout << endl;

    return;
}



void initVector(vector <char> &v) {


    unsigned int i = 0;
    char a = 'a';
    for(i = 0; i < v.size(); i++){
        v.at(i) = a + i;
    }
    
    return;
}

int convertPosition(char boardPosition) {


    int i = 0;
    i = boardPosition -'a'; 
    
    
    return i;
}



bool validPlacement(const vector<char>  &gameBoard, int positionIndex) {


    if(gameBoard.at(positionIndex) != 'X' && gameBoard.at(positionIndex) != 'O'){
        return true;
    } 
    
    
    
    return false;
}


int getPlay(const vector<char> &gameBoard) {

   
    char boardPosition = ' ';

    
    int i = 0;
    bool a = false;

    do{cout << "Please choose a position: ";
    cin >> boardPosition;
    cout << endl;
    i = convertPosition(boardPosition);
    a = validPlacement(gameBoard, i);
    }while( a == false);


    return i;
}



bool gameWon(const vector<char> &gameBoard) {

 
    if(gameBoard.at(0) == gameBoard.at(1) && gameBoard.at(1) == gameBoard.at(2)){
        return true;
    }
    if(gameBoard.at(3) == gameBoard.at(4) && gameBoard.at(4) == gameBoard.at(5)){
        return true;
    }
    if(gameBoard.at(6) == gameBoard.at(7) && gameBoard.at(7) == gameBoard.at(8)){
        return true;
    }
    

    if(gameBoard.at(0) == gameBoard.at(3) && gameBoard.at(3) == gameBoard.at(6)){
        return true;
    }
    if(gameBoard.at(1) == gameBoard.at(4) && gameBoard.at(4) == gameBoard.at(7)){
        return true;
    }
    if(gameBoard.at(2) == gameBoard.at(5) && gameBoard.at(5) == gameBoard.at(8)){
        return true;
    }
    
   
    if(gameBoard.at(0) == gameBoard.at(4) && gameBoard.at(4) == gameBoard.at(8)){
        return true;
    }
    if(gameBoard.at(2) == gameBoard.at(4) && gameBoard.at(4) == gameBoard.at(6)){
        return true;
    }
    
    return false;
}




bool boardFull(const vector<char> &gameBoard) {

   
    for (unsigned i = 0; i < gameBoard.size(); i++) {
        if(validPlacement(gameBoard, i) == true){
            return false;
        }
    }
    
    return true;
    
}



const int PLAYER1 = 0;
const int PLAYER2 = 1;

int main() {
   
    vector<char> gameBoard(9);
    int curPlay;
    int whosTurn = PLAYER1; // Player 1 always goes first and is 'X'
    vector <char> v;
    char symbol = 'X';

    initVector(gameBoard);


    drawBoard(gameBoard);




    while (boardFull(gameBoard) || gameWon(gameBoard) == false){
    


       curPlay = getPlay(gameBoard);


        gameBoard.at(curPlay) = symbol;
     
     


        if(whosTurn == PLAYER1){
            symbol = 'O';
            whosTurn = PLAYER2;
        }
        else {
            whosTurn = PLAYER1;
            symbol = 'X';
        }
        


        drawBoard(gameBoard);
    }



    if(boardFull(gameBoard) == true){
        cout << "No one wins" << endl;
    }
    else if (whosTurn == PLAYER2){
        cout << "PLAYER 1 WINS!" << endl;
    }
    else if (whosTurn == PLAYER1){
        cout << "PLAYER 2 WINS!" << endl;
    }


    return 0;
}
